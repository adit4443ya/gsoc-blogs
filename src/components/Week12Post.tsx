import { Prism as SyntaxHighlighter } from "react-syntax-highlighter";
import { dracula } from "react-syntax-highlighter/dist/esm/styles/prism";

export default function Week12Post() {
  const cmakelistsSnippet = `elseif (LFORTRAN_BACKEND STREQUAL "target_offload")
            set(c_file "\${CURRENT_BINARY_DIR}/\${file_name}.c")
            execute_process(
                COMMAND lfortran \${extra_args} --openmp --show-c --target-offload
                        \${CMAKE_CURRENT_SOURCE_DIR}/\${file_name}.f90
                OUTPUT_FILE \${c_file}
                RESULT_VARIABLE convert_result
            )
            configure_file(
                \${CMAKE_SOURCE_DIR}/../src/libasr/config.h.in
                \${CMAKE_SOURCE_DIR}/../src/libasr/config.h
                @ONLY
            )
            add_executable(\${name}
                \${CMAKE_SOURCE_DIR}/../src/libasr/runtime/lfortran_intrinsics.c
                \${CMAKE_SOURCE_DIR}/../src/libasr/runtime/cpu_impl.c
                \${c_file}
            )
            target_include_directories(\${name} PUBLIC
                \${CMAKE_SOURCE_DIR}/../src/
                \${CMAKE_SOURCE_DIR}/../src/libasr/runtime
            )
            target_compile_options(\${name} PUBLIC -fopenmp)
            target_link_libraries(\${name} PUBLIC m)
            target_link_options(\${name} PUBLIC -fopenmp)
            target_link_options(\${name} PUBLIC -L$ENV{CONDA_PREFIX}/lib \${extra_args})
            add_test(NAME \${name} COMMAND \${name})
`;


  return (
    <div className="post-content space-y-8">
      {/* Recap and Motivation Section */}
      <div className="relative">
        <p className="text-lg text-gray-700 dark:text-gray-300 leading-relaxed">
          Building on Week 11’s dual-mode C-backend for CPU and GPU offloading, Week 12 focused on cleaning up my work and preparing a PR for integration. Last week, I planned to address CI testing and extend offloading support. This week, I resolved CI issues, merged a new feature for the <code className="font-semibold text-indigo-600 dark:text-indigo-400">teams distribute</code> construct, and documented the process. I spent about 21 hours ensuring.
        </p>
      </div>

      {/* PR Preparation and CI Fixes */}
      <div>
        <h2 className="text-3xl font-semibold text-gray-900 dark:text-gray-100 mt-10 mb-4 border-l-4 border-indigo-500 pl-4">
          Preparing the PR and Fixing CI Issues
        </h2>
        <p className="text-lg text-gray-700 dark:text-gray-300 leading-relaxed">
          This week, I cleaned up my branch and submitted PR <a href="https://github.com/lfortran/lfortran/pull/8243" className="text-indigo-500 dark:text-indigo-400 hover:underline">#8243</a> to integrate the target offloading work. During this, I ran into CI failures due to missing runtime dependencies. The problem was that <code className="font-semibold text-indigo-600 dark:text-indigo-400">config.h</code>, which is generated by CMake from <code className="font-semibold text-indigo-600 dark:text-indigo-400">config.h.in</code> during the build, wasn’t found by GCC during integration tests for the <code className="font-semibold text-indigo-600 dark:text-indigo-400">target_offload</code> backend. After some debugging, I added a <code className="font-semibold text-indigo-600 dark:text-indigo-400">configure_file</code> command in the <code className="font-semibold text-indigo-600 dark:text-indigo-400">CMakeLists.txt</code> to ensure this file is created correctly. The updated section now looks like this:
        </p>
        <details className="mt-4">
          <summary className="cursor-pointer text-lg font-medium text-indigo-600 dark:text-indigo-400 hover:underline">
            View Updated CMakeLists.txt Snippet
          </summary>
          <div className="relative mt-2">
          <div className="absolute inset-0 bg-gradient-to-r from-indigo-500/10 to-purple-500/10 rounded-lg"></div>
            <div className="relative mt-2">
                {/* Contrasting, visually appealing background for code block */}
                <div
                    className="absolute inset-0 rounded-lg pointer-events-none"
                    style={{
                        background: "#0f172a", // solid contrasting color (slate-900)
                        opacity: 0.92,
                        boxShadow: "0 4px 32px 0 rgba(79,70,229,0.10), 0 1.5px 4px 0 rgba(30,41,59,0.15)"
                    }}
                ></div>
                <SyntaxHighlighter
                    language="fortran"
                    style={dracula}
                    customStyle={{
                        padding: "20px 18px",
                        borderRadius: "10px",
                        overflowX: "auto",
                        background: "transparent",
                        fontSize: "1.08rem",
                        fontFamily: "Fira Mono, Menlo, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
                        color: "#f8fafc",
                        zIndex: 1,
                        position: "relative"
                    }}
                    showLineNumbers
                >
                    {cmakelistsSnippet}
                </SyntaxHighlighter>
            </div>
            </div>
        </details>
        <p className="text-lg text-gray-700 dark:text-gray-300 leading-relaxed mt-4">
          This fix ensured the CI tests passed, and I renamed <code className="font-semibold text-indigo-600 dark:text-indigo-400">cpu_impl</code> to <code className="font-semibold text-indigo-600 dark:text-indigo-400">cuda_runtime_impl.h</code> the PR for better naming.
        </p>
      </div>

      {/* New Feature and Documentation */}
      <div>
        <h2 className="text-3xl font-semibold text-gray-900 dark:text-gray-100 mt-10 mb-4 border-l-4 border-indigo-500 pl-4">
          New Feature and Documentation
        </h2>
        <p className="text-lg text-gray-700 dark:text-gray-300 leading-relaxed">
          I also merged another PR that added support for the combined <code className="font-semibold text-indigo-600 dark:text-indigo-400">teams distribute</code> construct. While individual <code className="font-semibold text-indigo-600 dark:text-indigo-400">teams</code> and <code className="font-semibold text-indigo-600 dark:text-indigo-400">distribute</code> constructs worked well, the <code className="font-semibold text-indigo-600 dark:text-indigo-400">!$omp teams distribute</code> syntax needed specific handling. This enhancement ensures better integration of team-based distribution in offloading scenarios.
        </p>
        <p className="text-lg text-gray-700 dark:text-gray-300 leading-relaxed mt-4">
          Additionally, I documented the steps to use the C-backend for dumping both OpenMP and CUDA code from an MRE in Issue <a href="https://github.com/lfortran/lfortran/issues/4497#issuecomment-3166812375" className="text-indigo-500 dark:text-indigo-400 hover:underline">#4497</a>. This guide helps others replicate my setup and test the generated code, making the process more accessible.
        </p>
      </div>

      {/* Next Steps Section */}
      <div>
        <h2 className="text-3xl font-semibold text-gray-900 dark:text-gray-100 mt-10 mb-4 border-l-4 border-indigo-500 pl-4">
          Next Steps
        </h2>
        <p className="text-lg text-gray-700 dark:text-gray-300 leading-relaxed">
          For Week 13, I plan to:
        </p>
        <ul className="list-disc pl-6 mt-4 space-y-2 text-lg text-gray-700 dark:text-gray-300">
          <li>Explore Openmp constructs/clauses to implement.</li>
        </ul>
        <p className="text-lg text-gray-700 dark:text-gray-300 leading-relaxed mt-4">
          I thank my mentors, <a href="https://github.com/certik" className="text-indigo-500 dark:text-indigo-400 hover:underline" target="_blank" rel="noopener noreferrer">Ondrej Certik</a>, <a href="https://github.com/Pranavchiku" className="text-indigo-500 dark:text-indigo-400 hover:underline" target="_blank" rel="noopener noreferrer">Pranav Goswami</a>, and <a href="https://github.com/gxyd" className="text-indigo-500 dark:text-indigo-400 hover:underline" target="_blank" rel="noopener noreferrer">Gaurav Dhingra</a>, for their guidance during the CI debugging and PR review. I also appreciate the LFortran community’s support as we near the project’s end.
        </p>
      </div>
    </div>
  );
}